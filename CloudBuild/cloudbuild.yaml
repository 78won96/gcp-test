steps:

  # 1. 도커 이미지 빌드
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build'
    args: [
      'build',   
      '-t', 'asia-northeast3-docker.pkg.dev/${PROJECT_ID}/$REPO_NAME/cloudbuild-test:latest', 'CloudBuild/']

  # 2. Prisma Cloud Image Scan
  - name: 'gcr.io/cloud-builders/docker'
    id: 'scan'
    entrypoint: 'bash'
    args: 
    - '-c'
    - |
        docker run --rm \
        -v /var/run/docker.sock:/var/run/docker.sock \
        asia-northeast3-docker.pkg.dev/flash-physics-368407/twistlock/twistlock:latest \
        images scan --address $$address \
        --user $$prismauser --password $$prismapassword \
        --details asia-northeast3-docker.pkg.dev/${PROJECT_ID}/$REPO_NAME/cloudbuild-test:latest
    
    secretEnv:
      ['address', 'prismauser', 'prismapassword'] 
  
  # 3. Artifact Registry에 푸시하는 단계
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push'
    args: [ 'push', 'asia-northeast3-docker.pkg.dev/${PROJECT_ID}/$REPO_NAME/cloudbuild-test:latest' ]
    
            
  # 4. Cloud Run 동작
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Deploy'
    args:
      - 'run'
      - 'deploy'
      - 'cloudrun-test-ljw'
      - '--image'
      - 'asia-northeast3-docker.pkg.dev/${PROJECT_ID}/$REPO_NAME/cloudbuild-test:latest'
      - '--region'
      - 'asia-northeast3'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'


options:
  logging: CLOUD_LOGGING_ONLY


availableSecrets:
  secretManager:
    - versionName: projects/${PROJECT_ID}/secrets/prismauser/versions/latest
      env: 'prismauser'
    - versionName: projects/${PROJECT_ID}/secrets/prismapassword/versions/latest
      env: 'prismapassword'
    - versionName: projects/${PROJECT_ID}/secrets/address/versions/latest
      env: 'address'