
label = "Pod-temp-ljw"

podTemplate(label: label, containers: [

    containerTemplate(name: "gcloud", image: "google/cloud-sdk:alpine", command: "cat", ttyEnabled: true, alwaysPullImage: true, resourceRequestCpu: '10m'),

    containerTemplate(name: "ubuntu", image: "ubuntu", command: "cat", ttyEnabled: true, alwaysPullImage: true, resourceRequestCpu: '10m'),

],

    volumes: [

        hostPathVolume(mountPath: "/var/run/docker.sock", hostPath: "/var/run/docker.sock"),

    ],

) 
{

    node(label) {

        stage('Docker') {

            container("gcloud") {

                   withCredentials([file(credentialsId: 'gke-sa-secret', variable: 'GOOGLE_AUTH')]) {

                sh '''
                    
                    gcloud auth activate-service-account --key-file="$GOOGLE_AUTH"
                    gcloud --quiet auth configure-docker
                    gcloud --quiet auth configure-docker asia-northeast3-docker.pkg.dev
                    docker pull asia-northeast3-docker.pkg.dev/flash-physics-368407/gcp-project-ljw/cloudbuild-test:latest
                    docker images
                '''

                }
            }
        }
        stage ('Prisma Cloud scan') { // See 6
            try {   
                    prismaCloudScanImage ca: '',
                    cert: '',
                    containerized:true,
                    image: 'asia-northeast3-docker.pkg.dev/flash-physics-368407/gcp-project-ljw/cloudbuild-test:latest',
                    dockerAddress: 'unix:///var/run/docker.sock',
                    project: '',
                    ignoreImageBuildTime: true,
                    key: '',
                    logLevel: 'info',
                    podmanPath: '',
                    resultsFile: 'prisma-cloud-scan-results.json'
        }  catch (all) {
           currentBuild.result = 'FAILURE'
      }
        }
        stage ('Prisma Cloud publish') { // Prisma Scanning Result
        prismaCloudPublish resultsFilePattern: 'prisma-cloud-scan-results.json'
        }
        stage ('Push Image') {
             container("gcloud") {

                   withCredentials([file(credentialsId: 'gke-sa-secret', variable: 'GOOGLE_AUTH')]) {
                 
                 sh '''
                    gcloud auth activate-service-account --key-file="$GOOGLE_AUTH"
                    docker image tag asia-northeast3-docker.pkg.dev/flash-physics-368407/gcp-project-ljw/cloudbuild-test:latest asia-northeast3-docker.pkg.dev/flash-physics-368407/jenkins-repo/cloud-build-scanned:latest
                    docker images
                    docker push asia-northeast3-docker.pkg.dev/flash-physics-368407/jenkins-repo/cloud-build-scanned:latest
                    
                '''   
                }
             }
        } 
    }
}


// Artifact Registry Pull image -> Prisma Cloud Image Scan -> Artifact Registry Push Image